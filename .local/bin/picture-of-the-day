#!/usr/bin/env python3
"""
Executable module that's set the background and color scheme

Functions:
    main
"""
import re
import subprocess
from pathlib import Path
from typing import NoReturn, Optional

import requests
from requests import exceptions as requests_exceptions


def main() -> NoReturn:
    """
    Set the background and the color scheme based on the APD* site

    * APD: Astronomy Picture of the Day
    APD site: https://apod.nasa.gov/apod/astropix.html

    Some changes to site structure or connection problems may generate
    exceptions. If this occurs, we set a random background and schema colors.
    The image is saved in ~/Pictures/Wallpapers folder.
    """

    def change_background(image_path: Optional[str] = None) -> NoReturn:
        subprocess_args = ['change-background']
        if image_path:
            subprocess_args.append(image_path)
        subprocess.call(subprocess_args)

    nasa_base_url = "https://apod.nasa.gov"
    try:
        web_response = requests.get(f"{nasa_base_url}/apod/astropix.html")

        if web_response.status_code != 200:
            change_background()

        elif image_match := re.search(r"href=\"(?P<image>image\/\d{4}\/[^\"]*.jpg)\"", web_response.text):
            # Save the image
            image_path = image_match.groupdict()['image']
            image = requests.get(f"{nasa_base_url}/{image_path}")
            image_name = image_path.split("/")[-1]
            destination_path = Path.home() / "Pictures" / "Wallpapers" / image_name
            with open(destination_path, "wb") as file:
                file.write(image.content)

            # Add EXIF description tag to the image
            if description_match := re.search(r"<center>\s*<b>(?P<description>.*)</b>", web_response.text):
                description = description_match.groups()[0].strip()
                subprocess.call((
                    "exiftool",
                    "-overwrite_original",
                    f"-Description=\"{description}\"",
                    f"{destination_path}",
                ))

            change_background(destination_path)

        else:
            change_background()

    except requests_exceptions.RequestException:
        change_background()


if __name__ == "__main__":
    main()
